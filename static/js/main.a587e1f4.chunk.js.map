{"version":3,"sources":["components/images/meg2.JPG","components/firebase.js","components/Project.js","components/Om.js","components/Footer.js","components/Projects.js","components/ProjectDetails.js","components/Contact.js","components/Header.js","components/Login.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Project","props","useState","className","data","defaultImage","src","alt","onClick","navigate","process","id","title","year","byline","signedIn","to","color","window","confirm","firestore","collection","doc","delete","then","ref","console","log","catch","error","Om","Footer","Projects","projects","setProjects","useEffect","location","href","includes","orderBy","onSnapshot","snapshot","docs","add","timestamp","FieldValue","serverTimestamp","length","breakpointCols","default","1300","1100","columnClassName","map","project","key","ProjectDetails","setProject","description","parse","Contact","meg2","width","Header","show","setShow","size","getProps","isPartiallyCurrent","target","rel","Login","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","currentUser","displayName","photoURL","signOut","Edit","status","setStatus","updateValue","e","persist","existingProject","name","value","onSubmit","preventDefault","update","message","onChange","placeholder","hidden","accept","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","onProgress","percentage","type","App","setSignedIn","onAuthStateChanged","user","basepath","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a587e1f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meg2.eea68793.JPG\";","import firebase from 'firebase'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCNv41PvQcBDYqKQwuLqsT4MLTF1AFtbAE\",\n  authDomain: \"react-blog-template-83866.firebaseapp.com\",\n  databaseURL: \"https://react-blog-template-83866.firebaseio.com\",\n  projectId: \"react-blog-template-83866\",\n  storageBucket: \"react-blog-template-83866.appspot.com\",\n  messagingSenderId: \"169684654016\",\n  appId: \"1:169684654016:web:343e0f672241a60e34da25\",\n  measurementId: \"G-NKP74W03YJ\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig)\n\n  export default firebase","import React, {useState} from 'react'\nimport './Project.css'\nimport { AiOutlineDelete } from \"react-icons/ai\"\nimport { FiEdit3 } from \"react-icons/fi\"\nimport firebase from './firebase'\nimport  { Link, navigate } from '@reach/router'\n\n// import parse from 'html-react-parser'\n\n\nconst Project = (props) => {\n\n    const [/*activeProject, setActiveProject*/] = useState(false)\n\n    const deleteProject = () => {\n        if(window.confirm('Er du sikker?')){\n            firebase.firestore()\n                .collection('projects')\n                .doc(props.id)\n                .delete()\n                .then( ref => console.log('Document was deleted') )\n                .catch( error => console.log(error) )\n        }\n    }\n\n    return(                    \n        <div className='project' >\n            {\n                props.data.defaultImage &&\n                <img src={props.data.defaultImage} alt='default' onClick={ () => navigate(process.env.PUBLIC_URL + '/projects/' + props.id)}/>\n            }\n\n            <div className='innhold' onClick={ () => navigate(process.env.PUBLIC_URL + '/projects/' + props.id)}>\n\n                <h1>{props.data.title}</h1>\n            \n                <div className='year'>\n                    {props.data.year}\n\n                </div>\n\n                <div className='byline'>\n                    {props.data.byline}\n\n                </div>\n\n                </div>\n\n                {\n\n                props.signedIn &&\n                <div className='admin-icons'>\n                    <Link to={process.env.PUBLIC_URL + '/edit/' + props.id}>\n                        <FiEdit3 className='edit-icons' color='#383838' />\n                    </Link>            \n                    <AiOutlineDelete onClick={deleteProject} className='edit-icons' color='#383838' />\n                </div>\n                }\n\n            \n        \n        </div>\n    )\n}\n\nexport default Project","import React from 'react'\nimport './Om.css'\nimport { FaArrowDown } from \"react-icons/fa\"\n\nconst Om = () => {\n\n    return(\n\n    <div className='container'>\n       \n        <div className='navn'>\n            <h1>KRISTINE</h1>\n            <h1 className='mads'>MADSSVEEN</h1>\n            <h1>LINTORP</h1> \n        </div>\n\n        <div className='ux-design'>\n            <h1 className='animated heartBeat'><strong>Interaksjonsdesigner / UX-designer</strong></h1>\n\n            <FaArrowDown  color='#383838'/>\n\n        </div>\n\n        \n\n        <div className='om-meg'>\n            <h3 className='mads2'>... hvem er jeg?</h3>\n            <p>Mitt navn er Kristine Madssveen Lintorp, og jeg er ei 20 år gammel jente fra Lillestrøm. Helt siden jeg var liten har jeg elsket å designe diverse ting, og jeg har alltid elsket å lage ting fra \"scratch\". Når det kommer til prosjekter er jeg aller mest glad i alt fra idéfasen til prototyping, men utformingen av nettsiden er også gøy.</p>\n        </div>\n\n    </div>\n\n    )\n} \n\nexport default Om","import React from 'react'\nimport { AiOutlineHeart } from 'react-icons/ai'\n\n\n\n\nconst Footer = () => {\n\n    return(\n\n        <div>\n            <AiOutlineHeart className='edit-icons' color='#3FEBAF' />\n\n        </div>\n    )\n\n}\n\nexport default Footer","import React,{ useState, useEffect } from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport './Projects.css'\nimport { MdAddCircleOutline } from 'react-icons/md'\nimport {navigate} from '@reach/router'\nimport PacmanLoader from \"react-spinners/PacmanLoader\"\nimport Masonry from 'react-masonry-css'\nimport './Om.css'\nimport Om from  './Om'\nimport Footer from './Footer'\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState([])\n\n    useEffect(()=>{\n        if(!window.location.href.includes('projects'))navigate(process.env.PUBLIC_URL + '/projects')\n    },[])\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add(\n            {\n                title:'0 Nytt prosjekt',\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\n            }\n        )\n        .then( doc => navigate(process.env.PUBLIC_URL + '/edit/' + doc.id) )\n    }\n    \n    useEffect( () => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .orderBy('title')\n        .onSnapshot(\n            snapshot => setProjects(snapshot.docs)\n        )\n    }, [])\n\n    return(\n        <main>\n             <Om/> \n\n            <div className='overskrift'>\n                <h3>... div prosjekter</h3>\n            </div>\n\n            {\n                props.signedIn &&\n                <div className='add'>\n                    <MdAddCircleOutline className='edit-icons' color='#383838' onClick={addProject} />\n                </div>\n            }\n\n            {\n            projects.length > 0\n            ?\n            <Masonry\n                breakpointCols={\n                    {\n                        default: 3,\n                        1300: 2,\n                        1100: 1\n                    }\n                }\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\">\n                {/* array of JSX items */}\n                {\n                    projects.map(\n                        project => \n                        <Project \n                            key={project.id} \n                            data={project.data()} \n                            id={project.id} \n                            signedIn={props.signedIn}\n                        />\n                    )\n                }\n            </Masonry>\n            :\n            <PacmanLoader color='#383838' />\n            }\n\n            <Footer/>\n        </main>\n    )\n}\n\nexport default Projects","import React, {useState, useEffect} from 'react'\nimport './ProjectDetails.css'\nimport firebase from './firebase'\nimport parse from 'html-react-parser'\nimport  { Link } from '@reach/router'\n\n\nconst ProjectDetails = (props) => {\n\n    const[project, setProject] = useState()\n\n    let useEffectActivator = 1\n\n    useEffect( () => {\n        console.log('i am activated by the useEffectActivator constant')\n    }, [useEffectActivator] )\n\n    useEffect( () => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .doc(props.id)\n        .onSnapshot(\n            snapshot => setProject(snapshot.data())\n        )\n    }, [props.id])\n\n    return(\n\n        <main className='project-details animated fadeInRight '>\n            {\n                project\n                ?\n            \n        <div>\n            \n            <div className='container2'>\n\n                <div className='bilde'>\n                    {\n                        project.defaultImage && \n                        <img src={project.defaultImage} alt='default' />\n                    }\n                </div>\n\n                <div className='innhold'>\n                    <h1 className='navn2'>{project.title}</h1>\n                \n                    <div className='year'>\n                        {project.year}\n\n                    </div>\n\n                    <div className='description'>\n                        {project.description && parse(project.description)}\n\n                    </div>\n                </div>\n\n            </div>\n\n                <p className='tilbake'>\n                    <Link to={process.env.PUBLIC_URL + '/projects/'}>Tilbake</Link>\n                </p>\n            \n            \n    \n        </div>\n                :\n                <h2>Henter prosjekt, vennligst vent</h2>  \n            }\n        </main>\n    )\n}\n\nexport default ProjectDetails","import React from 'react'\nimport meg2 from './images/meg2.JPG'\n\nconst Contact = () => {\n    return(\n        <main>\n            <img src={meg2} alt='meg' width='20%'></img>\n            <h1>Kontakt meg gjerne!</h1>\n            <p><strong>Tlf. </strong>+ 47 941 31 476</p>\n            <p><strong>E-post: </strong>kristeline.ml@gmail.com</p>\n        </main>\n    )\n}\n\nexport default Contact","import React, {useState} from 'react'\nimport { Link } from '@reach/router'\nimport './Header.css'\nimport { MdMenu } from \"react-icons/md\"\nimport { FaLinkedin } from \"react-icons/fa\"\n\nconst Header = ( props ) => {\n\n    const [show, setShow] = useState(false)\n\n    const isPartiallyActive = ({\n        isPartiallyCurrent\n    }) => {\n        return isPartiallyCurrent\n        ? { className: 'active' }\n        : null\n    }\n\n    return(\n\n        <div className='header-container'>\n\n        <MdMenu className='burger' color='darkgray' size='32' onClick={ () => setShow(!show) } />\n\n        <header className= { show ? 'visible' : '' } onClick={ () => setShow(false) }>\n            \n            <div>\n            <Link getProps={isPartiallyActive} to='/projects'>prosjekter</Link>\n            </div>\n            <div className='menu2'>\n            <Link to='/contact'>kontakt</Link>\n            <Link to='/login'>\n                {\n                props.signedIn \n                ? 'profil'\n                : 'login'\n                }\n            </Link>\n            <a href='https://www.linkedin.com/in/kristine-madssveen-lintorp-319a97164/' target=\"_blank\" rel=\"noopener noreferrer\" ><FaLinkedin className='edit-icons' color='#035A88' /></a>\n            </div>\n        </header>        \n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport firebase from './firebase'\nimport './Login.css'\n\nconst Login = (props) => {\n    const loginWithGoogle = () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth()\n        .signInWithPopup(provider)\n            .catch( (error) => {\n                console.log(error)\n            } )\n    }\n    const logout = () => {\n        firebase.auth().signOut()\n    }\n    return(\n        <main className='login'>\n        {\n            !props.signedIn &&\n            <button onClick={loginWithGoogle}>logg inn</button>\n        }\n        {\n            props.signedIn &&\n            <div className='profile'>\n                <h1>Du er logget inn på Firebase</h1>\n                <p>Velkommen {firebase.auth().currentUser.displayName}</p>\n                {\n                    firebase.auth().currentUser.photoURL &&\n                    <img alt='profile img' src={firebase.auth().currentUser.photoURL} />\n                }\n                <button onClick={logout}>logg ut</button>\n            </div>\n        }\n        </main>\n    )\n}\n\nexport default Login","import React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport './Edit.css'\nimport FileUploader from \"react-firebase-file-uploader\"\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState()\n    const [status,setStatus] = useState('')\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n        .onSnapshot( snapshot => \n            setProject( snapshot.data() )    \n        )\n    }, [props.id] )\n\n    const saveProject = (e) => {\n        setStatus('laster, vennligst vent')\n        e.preventDefault()\n        firebase.firestore().collection('projects').doc(props.id)\n            .update(project)\n            .then( () => setStatus('prosjekt oppdatert') )\n            .catch( error => {console.log( error.message )} )\n    }\n\n    const updateValue = \n        e => {\n        e.persist()\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n    }\n    const uploadStart = () => {\n        setStatus('laster opp bilde, vennligst vent')\n    }\n    const uploadError = (error) => {\n        setStatus(error)\n    }\n    const handleProgress = (percentage) => {\n        console.log(percentage)\n    }\n\n    const uploadSuccess = filename => {\n        firebase\n            .storage()\n            .ref('images')\n            .child(filename)\n            .getDownloadURL()\n            .then(\n                url => setProject( existingProject => ( {\n                    ...existingProject,\n                    defaultImage: url\n                } ) )\n            )\n            setStatus('bilde opplastet')\n    }\n\n    return(\n        <main className='edit'>\n            {\n            project && \n            <>\n            <h1>Edit project: {project.title}</h1>\n            <form onSubmit={saveProject}>\n                <input name='title' onChange={updateValue} value={project.title} />\n                <input onChange={updateValue} name='year' placeholder='År' value={project.year} />\n                <input onChange={updateValue} className='byline' name='byline' placeholder='Kort beskrivelse av prosjektet' value={project.byline} />\n                <textarea onChange={updateValue} name='description' placeholder='Beskriv prosjektet ditt så godt du kan her' value={project.description} />\n\n                {\n                    project.defaultImage &&\n                    <img src={project.defaultImage} alt='default' />\n                }\n               <label>\n            <div className='button'>{project.defaultImage ? 'erstatt' : 'last opp bilde'}</div>\n                <FileUploader\n                    hidden\n                    accept=\"image/*\"\n                    storageRef={firebase.storage().ref('images')}\n                    onUploadStart={uploadStart}\n                    onUploadError={uploadError}\n                    onUploadSuccess={uploadSuccess}\n                    onProgress={handleProgress}\n                    />\n                </label>\n                <button type='submit'>lagre</button>\n            </form>\n            </>\n            }\n            <p>{status}</p>\n        </main>\n    )\n}\n\nexport default Edit","import React, { useState, useEffect } from 'react'\nimport { Router } from '@reach/router'\nimport './App.css'\nimport Projects from './components/Projects'\nimport ProjectDetails from './components/ProjectDetails'\nimport Contact from './components/Contact'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Edit from './components/Edit'\nimport firebase from './components/firebase'\n\n\nconst App = () => {\n\n  const [signedIn, setSignedIn] = useState(false)\n\n  useEffect( () => {\n    firebase.auth().onAuthStateChanged(\n      user => {\n        if(user){\n          setSignedIn(true)\n        }else{\n          setSignedIn(false)\n        }\n      }\n    )\n  })\n\n  return(\n    <div>\n\n      <Header signedIn={signedIn} />\n\n       \n      <Router basepath={process.env.PUBLIC_URL}>\n        <Projects default signedIn={signedIn} path='/projects' />\n        <Contact path='/contact' />\n        <ProjectDetails path='/projects/:id' />\n        <Login signedIn={signedIn} setSignedIn={setSignedIn} path='/login' />\n        <Edit path='/edit/:id' />\n      </Router>\n        \n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}